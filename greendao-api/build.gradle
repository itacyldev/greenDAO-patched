apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'org.greenrobot'
version = rootProject.version

sourceCompatibility = 1.7
targetCompatibility = 1.7

apply from: rootProject.file("gradle/publish.gradle")

javadoc {
    failOnError = false
    title = " greenDAO API ${version} API"
    options.bottom = 'Available under the Apache License, Version 2.0 - <i>Copyright &#169; 2011-2017 <a href="http://greenrobot.org/">greenrobot.org</a>. All Rights Reserved.</i>'
    doLast {
        copy {
            from '../javadoc-style'
            into "build/docs/javadoc/"
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    // jar added by Java plugin.
    archives sourcesJar
    //archives javadocJar
}
/*
uploadArchives {
    repositories {
        mavenDeployer {
            // Basic definitions are defined in root project
            pom.project {
                name 'greenDAO API'
                description 'greenDAO is a light and fast ORM for Android'

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}*/

publishing {
    repositories {
        maven {
        	def releasesRepoUrl = "http://repo.itacyl.es/archiva/repository/internal/"
            def snapshotsRepoUrl = "http://repo.itacyl.es/archiva/repository/snapshots/"
            url version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        	
        	def releasesRepoName = "internal"
            def snapshotsRepoName = "snapshots"
            name version.endsWith("SNAPSHOT") ? snapshotsRepoName : releasesRepoName
            
            credentials {
                username = mavenUser
                password = mavenPassword
           }
        }
    }

    publications {
        api(MavenPublication) {
            from components.java
        }
    }
}